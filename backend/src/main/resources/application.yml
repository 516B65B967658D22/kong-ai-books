spring:
  application:
    name: kong-ai-books
  
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  
  # Database Configuration
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/kong_ai_books}
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
  
  # Redis Configuration
  data:
    redis:
      host: ${SPRING_REDIS_HOST:localhost}
      port: ${SPRING_REDIS_PORT:6379}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
  
  # Flyway Migration
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
  
  # File Upload
  servlet:
    multipart:
      max-file-size: ${MAX_FILE_SIZE:100MB}
      max-request-size: ${MAX_FILE_SIZE:100MB}
  
  # Security
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:}
            client-secret: ${GOOGLE_CLIENT_SECRET:}
            scope: openid,profile,email
  
  # AI Configuration
  ai:
    openai:
      api-key: ${OPENAI_API_KEY:}
      chat:
        options:
          model: ${AI_MODEL_NAME:gpt-4}
          temperature: 0.7
          max-tokens: 2000
      embedding:
        options:
          model: ${EMBEDDING_MODEL_NAME:text-embedding-ada-002}
    
    vectorstore:
      chroma:
        client:
          host: ${CHROMA_HOST:localhost}
          port: ${CHROMA_PORT:8000}

# Server Configuration
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain

# Management & Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when_authorized
  metrics:
    export:
      prometheus:
        enabled: true

# Logging Configuration
logging:
  level:
    com.kong.aibooks: ${LOG_LEVEL:INFO}
    org.springframework.ai: DEBUG
    org.springframework.security: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/kong-ai-books.log

# Application Configuration
app:
  jwt:
    secret: ${JWT_SECRET:kong-ai-books-secret-key-change-in-production}
    expiration: 86400000 # 24 hours
  
  cors:
    allowed-origins: ${CORS_ORIGINS:http://localhost:3000}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true
  
  file:
    upload-dir: ${FILE_UPLOAD_DIR:./uploads}
    max-size: ${MAX_FILE_SIZE:100MB}
    allowed-types: ${ALLOWED_FILE_TYPES:pdf,epub,txt,docx}
  
  ai:
    enabled: true
    max-context-length: 4000
    chunk-size: 1000
    chunk-overlap: 200
    similarity-threshold: 0.7
    max-results: 5